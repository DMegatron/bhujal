# Bhujal Node.js Groundwater Management System
# This file lists the dependencies for reference - actual dependencies are managed via package.json

## Project Structure
This is a Node.js Express application, not a Python project.
The actual dependencies are managed in the root package.json file.

## Current Dependencies (from package.json):

### Production Dependencies:
- express@^4.18.2          # Web framework
- mongoose@^7.5.0          # MongoDB ODM
- bcryptjs@^2.4.3          # Password hashing
- express-session@^1.17.3  # Session management
- express-validator@^7.0.1 # Input validation
- connect-flash@^0.1.1     # Flash messages
- method-override@^3.0.0   # HTTP method override
- helmet@^7.0.0            # Security headers
- ejs@^3.1.9               # Template engine
- axios@^1.11.0            # HTTP client for APIs
- dotenv@^16.3.1           # Environment variables

### Development Dependencies:
- nodemon@^3.0.1           # Development server with auto-reload

## Installation Instructions:
1. Make sure you have Node.js (v16 or higher) installed
2. Navigate to the project root directory
3. Run: npm install
4. Create a .env file with required environment variables
5. For development: npm run dev
6. For production: npm start

## Runtime Requirements:
- Node.js v16.x or higher
- MongoDB 4.4 or higher (local or Atlas cloud)
- NPM v8.x or higher

## Development Scripts (from package.json):
- npm start: Start production server (node simple-app.js)
- npm run dev: Start development server with nodemon

## Environment Variables Required (.env file):
- MONGODB_URI=mongodb://localhost:27017/bhujal
- SESSION_SECRET=your-session-secret-key
- WEATHER_API_KEY=your-openweather-api-key (optional)
- PORT=3000 (optional, defaults to 3000)
- NODE_ENV=development (or production)

## Database Setup:
The application uses MongoDB with Mongoose ODM.
Collections: users, borewells

## API Endpoints:
- Authentication: /login, /register, /logout
- Borewells: /api/borewells (CRUD operations)
- Reports: /reports, /api/reports/export
- Weather: /api/weather (current conditions)
- Maps: /map (interactive map interface)
